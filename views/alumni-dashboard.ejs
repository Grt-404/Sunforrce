<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Dashboard â€” Sunforce</title>
    <link
      rel="icon"
      href="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='64' height='64'%3E%3Cdefs%3E%3ClinearGradient id='g' x1='0' y1='0' x2='1' y2='1'%3E%3Cstop offset='0%25' stop-color='%2322C55E'/%3E%3Cstop offset='100%25' stop-color='%2316A34A'/%3E%3C/linearGradient%3E%3C/defs%3E%3Ccircle cx='32' cy='32' r='30' fill='url(%23g)'/%3E%3Ctext x='32' y='42' font-size='32' text-anchor='middle' fill='white' font-family='Arial Black'%3ES%3C/text%3E%3C/svg%3E"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Playfair+Display:wght@700;800&display=swap"
      rel="stylesheet"
    />
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/lucide@latest"></script>

    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              background: "#f8f5f2",
              foreground: "#1f1c18",
              card: "#ffffff",
              "card-foreground": "#1f1c18",
              primary: "#16a34a",
              "primary-foreground": "#ffffff",
              secondary: "#22c55e",
              border: "rgba(0, 0, 0, 0.08)",
            },
            fontFamily: {
              sans: ["Inter", "sans-serif"],
              serif: ["Playfair Display", "serif"],
            },
            boxShadow: {
              soft: "0 4px 12px rgba(0, 0, 0, 0.05)",
              lift: "0 10px 25px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1)",
              glow: "0 0 20px rgba(22, 163, 74, 0.15)",
            },
            keyframes: {
              "fade-in-up": { "0%": { opacity: 0, transform: "translateY(20px)" }, "100%": { opacity: 1, transform: "translateY(0)" } },
              backgroundShift: { "0%, 100%": { backgroundPosition: "0% 50%" }, "50%": { backgroundPosition: "100% 50%" } },
            },
            animation: {
              "fade-in-up": "fade-in-up 0.8s ease-out forwards",
              backgroundShift: "backgroundShift 25s ease infinite",
            },
          },
        },
      };
    </script>

    <style>
      body {
        background: linear-gradient(-45deg, #f0fdf4, #f9fafb, #eefbf3, #f9fafb);
        background-size: 400% 400%;
        animation: backgroundShift 25s ease infinite;
      }
      .glass-header { background: rgba(255, 255, 255, 0.85); backdrop-filter: blur(12px); -webkit-backdrop-filter: blur(12px); border-bottom: 1px solid var(--tw-color-border); }
      #particle-canvas { position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: -1; opacity: 0.6; }
      .nav-link { transition: all 0.2s ease-in-out; border-bottom: 2px solid transparent; }
      .nav-link.active, .nav-link:hover { color: var(--tw-color-primary); border-bottom-color: var(--tw-color-primary); }
      .card-hover { transition: transform 0.3s ease, box-shadow 0.3s ease; }
      .card-hover:hover { transform: translateY(-5px); box-shadow: var(--tw-shadow-lift), var(--tw-shadow-glow); }
    </style>
  </head>
  <body class="bg-background font-sans antialiased text-foreground">
    <canvas id="particle-canvas"></canvas>

    <header class="fixed top-0 inset-x-0 z-40 glass-header">
        <div class="mx-auto max-w-screen-xl px-4 sm:px-6 lg:px-8">
            <div class="relative flex h-16 items-center justify-center">
                <div class="flex items-center">
                    <a href="/" class="text-3xl font-serif font-bold text-primary">Sunforce</a>
                </div>
                <div class="absolute right-0 flex items-center">
                    <a href="/logout" class="px-4 py-2 rounded-md bg-primary text-primary-foreground hover:bg-green-700 transition-colors font-semibold shadow-soft flex items-center gap-2">
                        <i data-lucide="log-out" class="w-4 h-4"></i> Logout
                    </a>
                </div>
            </div>
        </div>
    </header>

    <main class="pt-16">
      <nav class="bg-card border-b border-border px-4 py-2 sticky top-16 z-30">
        <div class="max-w-screen-xl mx-auto flex justify-center items-center">
          <div class="flex gap-4 overflow-x-auto">
            <a href="/alumni/dashboard" class="nav-link active flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="layout-dashboard"></i>Dashboard</a>
            <a href="/alumni/network" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="users"></i>Clients</a>
            <a href="/alumni/chat" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="message-square"></i>Messaging</a>
            <a href="/alumni/event" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="calendar-plus"></i>Schedule Visit</a>
            <a href="/alumni/eventrequests" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="calendar"></i>Visit Requests</a>
          </div>
        </div>
      </nav>

      <div class="max-w-screen-xl mx-auto p-6 md:p-8">
        <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
          <aside class="lg:col-span-1 lg:sticky lg:top-36 self-start space-y-6">
            <div class="bg-card rounded-xl shadow-soft overflow-hidden animate-fade-in-up">
              <div class="h-24 bg-cover bg-center" style="background-image: url('https://images.unsplash.com/photo-1620912189835-3180d0992312?q=80&w=1974');"></div>
              <div class="p-4 text-center -mt-12">
                <div class="relative inline-block">
                  <% if (user.image) { %>
                  <img src="data:image/jpeg;base64,<%= user.image.toString('base64') %>" alt="Profile Photo" class="h-24 w-24 rounded-full object-cover ring-4 ring-white shadow-md"/>
                  <% } else { %>
                  <div class="h-24 w-24 rounded-full flex items-center justify-center bg-secondary text-primary-foreground text-4xl font-bold ring-4 ring-white shadow-md">
                    <%= user.name ? user.name.charAt(0).toUpperCase() : "A" %>
                  </div>
                  <% } %>
                </div>
                <h3 class="text-xl font-serif font-bold text-foreground mt-2"><%= user.name %></h3>
                <p class="text-sm text-gray-500"><%= user.designation || 'Administrator' %></p>
              </div>
              <div class="border-t border-border p-4">
                <a href="/alumni/profile" class="w-full text-center block px-4 py-2 rounded-md bg-primary/10 text-primary hover:bg-primary hover:text-primary-foreground transition-colors font-semibold">
                  Edit Profile
                </a>
              </div>
            </div>
          </aside>

          <section class="lg:col-span-2 space-y-6">
            <div class="bg-card rounded-xl shadow-soft p-4 animate-fade-in-up" style="animation-delay: 200ms">
              <form action="/post" method="POST" enctype="multipart/form-data" class="flex items-start gap-4">
                <div class="flex-grow">
                  <textarea name="content" placeholder="Create a new announcement..." class="w-full p-3 rounded-lg bg-background border border-border focus:ring-2 focus:ring-primary focus:outline-none transition-colors" rows="2" required></textarea>
                  <div class="flex justify-between items-center mt-2">
                    <label for="post-image-upload" class="flex items-center gap-2 text-gray-500 hover:text-primary cursor-pointer transition-colors"><i data-lucide="image"></i> Photo</label>
                    <button type="submit" class="px-5 py-2 rounded-lg bg-primary text-primary-foreground shadow-soft hover:bg-green-700 transition-colors font-semibold">Post</button>
                  </div>
                  <input type="file" name="image" id="post-image-upload" class="hidden"/>
                </div>
              </form>
            </div>

            <div id="feed" class="space-y-6">
              <% if (posts && posts.length > 0) { %>
                <% posts.forEach((post, index) => { %>
                  <article class="bg-card rounded-xl shadow-soft p-5 animate-fade-in-up card-hover" style="animation-delay: <%= 300 + index * 100 %>ms">
                    <div class="flex items-center gap-4 mb-4">
                      <div class="h-12 w-12 rounded-full flex items-center justify-center bg-secondary text-primary-foreground font-bold text-xl">
                        <%= post.author && post.author.name ? post.author.name.charAt(0).toUpperCase() : 'A' %>
                      </div>
                      <div>
                        <p class="font-semibold text-card-foreground"><%= post.author ? post.author.name : 'Sunforce Admin' %></p>
                        <p class="text-xs text-gray-500"><%= new Date(post.createdAt).toLocaleString() %></p>
                      </div>
                    </div>
                    <p class="text-gray-700 leading-relaxed whitespace-pre-wrap mb-4"><%= post.content %></p>
                    <% if (post.image) { %>
                    <div class="mt-4 rounded-lg border border-border bg-background/50 p-1">
                      <img src="data:image/jpeg;base64,<%= post.image.toString('base64') %>" alt="Post Image" class="w-full h-auto max-h-[500px] object-contain rounded-md"/>
                    </div>
                    <% } %>
                    <% if (user && post.author && String(user._id) === String(post.author._id)) { %>
                    <div class="mt-3 pt-3 border-t border-border flex items-center gap-4 text-xs">
                      <a href="/post/edit/<%= post._id %>" class="text-primary hover:underline font-medium">Edit Post</a>
                      <form action="/post/delete/<%= post._id %>" method="POST" class="inline">
                        <button type="submit" class="text-gray-500 hover:text-red-600 hover:underline">Delete Post</button>
                      </form>
                    </div>
                    <% } %>
                  </article>
                <% }) %>
              <% } else { %>
                <div class="bg-card rounded-xl shadow-soft p-8 text-center text-gray-500 animate-fade-in-up">
                  <p>No announcements yet. Create one to share an update!</p>
                </div>
              <% } %>
            </div>
          </section>

          <aside class="lg:col-span-1 lg:sticky lg:top-36 self-start space-y-6">
            <div class="bg-card rounded-xl shadow-soft p-6 animate-fade-in-up" style="animation-delay: 300ms">
              <h3 class="text-xl font-serif text-foreground mb-4">Client Inquiries</h3>
              <div id="invitations-list" class="space-y-4">
                  <% if (invitations && invitations.length > 0) { %>
                      <% invitations.forEach(student => { %>
                          <div class="invitation-card pt-4 border-t border-border first:pt-0 first:border-none" data-student-id="<%= student._id %>">
                              <p class="font-semibold text-card-foreground"><%= student.fullname %></p>
                              <div class="mt-3 flex items-center gap-2">
                                  <button data-action="accept" data-student-id="<%= student._id %>" class="respond-btn w-full px-3 py-1.5 bg-green-600 text-white rounded-md text-sm font-semibold hover:bg-green-700 transition-colors">Accept</button>
                                  <button data-action="reject" data-student-id="<%= student._id %>" class="respond-btn w-full px-3 py-1.5 bg-gray-200 text-gray-700 rounded-md text-sm font-semibold hover:bg-gray-300 transition-colors">Reject</button>
                              </div>
                          </div>
                      <% }) %>
                  <% } else { %>
                      <p class="text-gray-500 text-sm">No new client inquiries.</p>
                  <% } %>
              </div>
            </div>
            <div class="bg-card rounded-xl shadow-soft p-6 animate-fade-in-up" style="animation-delay: 400ms">
              <h3 class="text-xl font-serif text-foreground mb-4">Site Visit Requests</h3>
              <div class="space-y-4">
                <% if (requests.length > 0) { %> <% requests.forEach((req) => { %>
                <div class="group pt-4 border-t border-border first:pt-0">
                  <h4 class="font-serif font-semibold group-hover:underline"><%= req.title %></h4>
                  <p class="text-xs text-gray-500 mt-1">Requested by: <%= req.requestedBy?.fullname || "Unknown" %></p>
                </div>
                <% }) %> <% } else { %>
                <p class="text-gray-500 text-sm">No new requests</p>
                <% } %>
              </div>
              <a href="/alumni/eventrequests" class="w-full mt-4 text-center block px-4 py-2 rounded-md bg-primary/10 text-primary hover:bg-primary hover:text-primary-foreground transition-colors font-semibold text-sm">
                View All Requests
              </a>
            </div>
          </aside>
        </div>
      </div>
    </main>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        lucide.createIcons();

        const invitationsList = document.getElementById('invitations-list');
        if (invitationsList) {
            invitationsList.addEventListener('click', function(event) {
                if (event.target.classList.contains('respond-btn')) {
                    const button = event.target;
                    const studentId = button.dataset.studentId;
                    const action = button.dataset.action;
                    const invitationCard = button.closest('.invitation-card');
                    
                    button.textContent = 'Processing...';
                    button.disabled = true;

                    fetch(`/alumni/connections/respond/${studentId}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ action: action })
                    })
                    .then(response => {
                        if (!response.ok) { throw new Error('Network response was not ok'); }
                        return response.json();
                    })
                    .then(data => {
                        if (data.message) {
                            invitationCard.style.transition = 'opacity 0.5s';
                            invitationCard.style.opacity = '0';
                            setTimeout(() => {
                                invitationCard.remove();
                                if (document.getElementById('invitations-list').children.length === 0) {
                                    document.getElementById('invitations-list').innerHTML = '<p class="text-gray-500 text-sm">No new client inquiries.</p>';
                                }
                            }, 500);
                        } else {
                            throw new Error(data.error || 'Failed to respond');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        button.textContent = 'Error';
                        button.disabled = false;
                    });
                }
            });
        }
        
        const canvas = document.getElementById("particle-canvas");
        const ctx = canvas.getContext("2d");
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        let particles = [];
        const particleColor = "rgba(22, 163, 74, 0.4)";
        class Particle { constructor(x, y) { this.x = x; this.y = y; this.size = Math.random() * 1.5 + 1; this.speedX = Math.random() * 0.3 - 0.15; this.speedY = Math.random() * 0.3 - 0.15; } update() { this.x += this.speedX; this.y += this.speedY; if (this.size > 0.1) this.size -= 0.005; } draw() { ctx.fillStyle = particleColor; ctx.beginPath(); ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2); ctx.fill(); } }
        function initParticles() { for (let i = 0; i < 50; i++) { particles.push(new Particle(Math.random() * canvas.width, Math.random() * canvas.height)); } }
        function animateParticles() { if (!canvas) return; ctx.clearRect(0, 0, canvas.width, canvas.height); for (let i = 0; i < particles.length; i++) { particles[i].update(); particles[i].draw(); if (particles[i].size <= 0.1) { particles.splice(i, 1); i--; particles.push(new Particle(Math.random() * canvas.width, Math.random() * canvas.height)); } } requestAnimationFrame(animateParticles); }
        initParticles();
        animateParticles();
        window.addEventListener("resize", () => { if (canvas) { canvas.width = window.innerWidth; canvas.height = window.innerHeight; particles = []; initParticles(); } });
      });
    </script>
  </body>
</html>
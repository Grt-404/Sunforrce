<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Register â€” Sunforce Green Energy</title>
    <meta name="description" content="Join the Sunforce Green Energy client portal."/>
    <link rel="icon" href="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='64' height='64'%3E%3Cdefs%3E%3ClinearGradient id='g' x1='0' y1='0' x2='1' y2='1'%3E%3Cstop offset='0%25' stop-color='%2322C55E'/%3E%3Cstop offset='100%25' stop-color='%2316A34A'/%3E%3C/linearGradient%3E%3C/defs%3E%3Ccircle cx='32' cy='32' r='30' fill='url(%23g)'/%3E%3Ctext x='32' y='42' font-size='32' text-anchor='middle' fill='white' font-family='Arial Black'%3ES%3C/text%3E%3C/svg%3E" />

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Playfair+Display:wght@700;800&display=swap" rel="stylesheet">

    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/lucide@latest"></script>

    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        background: '#f8f5f2',
                        foreground: '#1f1c18',
                        card: '#ffffff',
                        'card-foreground': '#1f1c18',
                        primary: '#16a34a',
                        'primary-foreground': '#ffffff',
                        secondary: '#22c55e',
                        border: 'rgba(0, 0, 0, 0.08)',
                    },
                    fontFamily: {
                        sans: ['Inter', 'sans-serif'],
                        serif: ['Playfair Display', 'serif']
                    },
                    boxShadow: {
                        'soft': '0 4px 12px rgba(0, 0, 0, 0.05)',
                        'lift': '0 10px 25px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1)',
                    },
                    keyframes: {
                        'fade-in-up': { '0%': { opacity: 0, transform: 'translateY(20px)' }, '100%': { opacity: 1, transform: 'translateY(0)' } },
                        'backgroundShift': {
                            '0%, 100%': { backgroundPosition: '0% 50%' },
                            '50%': { backgroundPosition: '100% 50%' },
                        }
                    },
                    animation: {
                        'fade-in-up': 'fade-in-up 0.8s ease-out forwards',
                        'backgroundShift': 'backgroundShift 25s ease infinite',
                    }
                }
            }
        }
    </script>

    <style>
        html { scroll-behavior: smooth; }
        body {
            background: linear-gradient(-45deg, #f0fdf4, #f9fafb, #eefbf3, #f9fafb);
            background-size: 400% 400%;
            animation: backgroundShift 25s ease infinite;
        }
        #particle-canvas { position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: -1; opacity: 0.6; }
        .choice-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .choice-card:hover {
            transform: translateY(-8px);
            box-shadow: var(--tw-shadow-lift);
        }
    </style>
</head>
<body class="bg-background font-sans antialiased text-foreground">
    <canvas id="particle-canvas"></canvas>

     <header class="fixed top-0 inset-x-0 z-40 bg-transparent">
        <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
            <div class="relative flex h-16 items-center justify-center">
                <div class="flex items-center">
                    <a href="/" class="text-3xl font-serif font-bold text-primary">Sunforce</a>
                </div>
            </div>
        </div>
    </header>

    <main class="min-h-screen flex flex-col items-center justify-center pt-24 pb-12 px-4">
        <div class="text-center animate-fade-in-up">
            <h2 class="text-4xl md:text-5xl font-serif font-bold text-foreground">Join Sunforce</h2>
            <p class="text-gray-500 mt-2 max-w-2xl mx-auto">Choose your account type to get started with Sunforce Green Energy.</p>
        </div>
        
        <div class="mt-12 w-full max-w-4xl grid grid-cols-1 md:grid-cols-2 gap-8">
            <a href="/student/register" class="choice-card block bg-card rounded-xl shadow-soft overflow-hidden text-center animate-fade-in-up" style="animation-delay: 200ms;">
                <img src="https://images.pexels.com/photos/3184418/pexels-photo-3184418.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2" alt="A team of professionals collaborating" class="h-48 w-full object-cover">
                <div class="p-6">
                    <h3 class="text-2xl font-serif font-bold text-primary">I am a Client</h3>
                    <p class="text-sm text-gray-500 mt-2">Request site visits, track your project status, and manage your renewable energy solutions with ease.</p>
                </div>
            </a>
            
            <a href="/alumni/register" class="choice-card block bg-card rounded-xl shadow-soft overflow-hidden text-center animate-fade-in-up" style="animation-delay: 400ms;">
                 <img src="https://images.pexels.com/photos/1181298/pexels-photo-1181298.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2" alt="A person managing tasks on a computer" class="h-48 w-full object-cover">
                <div class="p-6">
                    <h3 class="text-2xl font-serif font-bold text-primary">I am an Admin</h3>
                    <p class="text-sm text-gray-500 mt-2">Access the dashboard to manage clients, approve site visits, and oversee all company operations.</p>
                </div>
            </a>
             <a href="/college/register" class="choice-card block bg-card rounded-xl shadow-soft overflow-hidden text-center animate-fade-in-up" style="animation-delay: 600ms;">
                 <img src="https://images.pexels.com/photos/256490/pexels-photo-256490.jpeg" alt="A modern university campus" class="h-48 w-full object-cover">
                <div class="p-6">
                    <h3 class="text-2xl font-serif font-bold text-primary">I am the owner</h3>
                    <p class="text-sm text-gray-500 mt-2">Build a powerful, engaged alumni ecosystem and track the success of your graduates.</p>
                </div>
            </a>
        </div>
        
        <p class="mt-12 text-center text-sm text-gray-600 animate-fade-in-up" style="animation-delay: 600ms;">
            Already have an account? <a href="/login" class="font-semibold text-primary hover:underline">Login here</a>
        </p>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            lucide.createIcons();
            
            const canvas = document.getElementById('particle-canvas');
            const ctx = canvas.getContext('2d');
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
            let particles = [];
            const particleColor = 'rgba(22, 163, 74, 0.5)';

            class Particle {
                constructor(x, y) { this.x = x; this.y = y; this.size = Math.random() * 1.5 + 1; this.speedX = Math.random() * 0.4 - 0.2; this.speedY = Math.random() * 0.4 - 0.2; }
                update() { this.x += this.speedX; this.y += this.speedY; if (this.size > 0.1) this.size -= 0.005; }
                draw() { ctx.fillStyle = particleColor; ctx.beginPath(); ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2); ctx.fill(); }
            }
            function initParticles() {
                for (let i = 0; i < 50; i++) { particles.push(new Particle(Math.random() * canvas.width, Math.random() * canvas.height)); }
            }
            function animateParticles() {
                if (!canvas) return;
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                for (let i = 0; i < particles.length; i++) {
                    particles[i].update(); particles[i].draw();
                    if (particles[i].size <= 0.1) { particles.splice(i, 1); i--; particles.push(new Particle(Math.random() * canvas.width, Math.random() * canvas.height)); }
                }
                requestAnimationFrame(animateParticles);
            }
            initParticles();
            animateParticles();

            window.addEventListener('resize', () => { 
                if(canvas){
                    canvas.width = window.innerWidth; 
                    canvas.height = window.innerHeight; 
                    particles = []; 
                    initParticles(); 
                }
            });
        });
    </script>
</body>
</html>
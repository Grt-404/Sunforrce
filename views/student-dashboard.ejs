<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Client Dashboard â€” Sunforce</title>
    <meta
      name="description"
      content="Manage your Sunforce Green Energy projects and connect with our team."
    />
    <link
      rel="icon"
      href="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='64' height='64'%3E%3Cdefs%3E%3ClinearGradient id='g' x1='0' y1='0' x2='1' y2='1'%3E%3Cstop offset='0%25' stop-color='%2322C55E'/%3E%3Cstop offset='100%25' stop-color='%2316A34A'/%3E%3C/linearGradient%3E%3C/defs%3E%3Ccircle cx='32' cy='32' r='30' fill='url(%23g)'/%3E%3Ctext x='32' y='42' font-size='32' text-anchor='middle' fill='white' font-family='Arial Black'%3ES%3C/text%3E%3C/svg%3E"
    />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Playfair+Display:wght@700;800&display=swap"
      rel="stylesheet"
    />

    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/lucide@latest"></script>

    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              background: "#f8f5f2",
              foreground: "#1f1c18",
              card: "#ffffff",
              "card-foreground": "#1f1c18",
              primary: "#16a34a", // Green 600
              "primary-foreground": "#ffffff",
              secondary: "#22c55e", // Green 500
              border: "rgba(0, 0, 0, 0.08)",
            },
            fontFamily: {
              sans: ["Inter", "sans-serif"],
              serif: ["Playfair Display", "serif"],
            },
            boxShadow: {
              soft: "0 4px 12px rgba(0, 0, 0, 0.05)",
              lift: "0 10px 25px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1)",
              glow: "0 0 20px rgba(22, 163, 74, 0.15)",
            },
            keyframes: {
              "fade-in-up": {
                "0%": { opacity: 0, transform: "translateY(20px)" },
                "100%": { opacity: 1, transform: "translateY(0)" },
              },
              backgroundShift: {
                "0%, 100%": { backgroundPosition: "0% 50%" },
                "50%": { backgroundPosition: "100% 50%" },
              },
            },
            animation: {
              "fade-in-up": "fade-in-up 0.8s ease-out forwards",
              backgroundShift: "backgroundShift 25s ease infinite",
            },
          },
        },
      };
    </script>

    <style>
      html { scroll-behavior: smooth; }
      body {
        background: linear-gradient(-45deg, #f0fdf4, #f9fafb, #eefbf3, #f9fafb);
        background-size: 400% 400%;
        animation: backgroundShift 25s ease infinite;
      }
      .glass-header {
        background: rgba(255, 255, 255, 0.85);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-bottom: 1px solid var(--tw-color-border);
      }
      #particle-canvas { position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: -1; opacity: 0.6; }
      .nav-link {
        transition: all 0.2s ease-in-out;
        border-bottom: 2px solid transparent;
      }
      .nav-link.active,
      .nav-link:hover {
        color: var(--tw-color-primary);
        border-bottom-color: var(--tw-color-primary);
      }
      .card-hover {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
      }
      .card-hover:hover {
        transform: translateY(-5px);
        box-shadow: var(--tw-shadow-lift), var(--tw-shadow-glow);
      }
    </style>
  </head>
  <body class="bg-background font-sans antialiased text-foreground">
    <canvas id="particle-canvas"></canvas>

    <header class="fixed top-0 inset-x-0 z-40 glass-header">
      <div class="mx-auto max-w-screen-xl px-4 sm:px-6 lg:px-8">
        <div class="relative flex h-16 items-center justify-between">
          <a href="/" class="text-3xl font-serif font-bold text-primary">Sunforce</a>
          <a
            href="/logout"
            class="px-4 py-2 rounded-md bg-primary text-primary-foreground hover:bg-green-700 transition-colors font-semibold shadow-soft flex items-center gap-2"
          >
            <i data-lucide="log-out" class="w-4 h-4"></i>
            Logout
          </a>
        </div>
      </div>
    </header>

    <main class="pt-16">
      <nav class="bg-card border-b border-border px-4 py-2 sticky top-16 z-30">
        <div class="max-w-screen-xl mx-auto flex justify-center items-center">
          <div class="flex gap-4 overflow-x-auto">
             <a href="/student/dashboard" class="nav-link active flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="layout-dashboard"></i>Dashboard</a>
            <a href="/student/connections" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="users"></i>Our Team</a>
            <a href="/student/posts" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="newspaper"></i>Announcements</a>
            <a href="/student/map" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="map"></i>Global Reach</a>
            <a href="/student/events" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="calendar"></i>Site Visit Requests</a>
            <a href="/student/profile" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="user-circle"></i>My Profile</a>
          </div>
        </div>
      </nav>

      <div class="max-w-screen-xl mx-auto p-6 md:p-8">
        <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
          <aside class="lg:col-span-1 lg:sticky lg:top-36 self-start">
            <div class="bg-card rounded-xl shadow-soft p-6 text-center animate-fade-in-up">
              <% if (user.image) { %>
              <img
                src="data:image/jpeg;base64,<%= user.image.toString('base64') %>"
                alt="Profile Photo"
                class="h-24 w-24 rounded-full object-cover ring-4 ring-primary/20 shadow-soft mx-auto"
              />
              <% } else { %>
              <div
                class="h-24 w-24 rounded-full flex items-center justify-center bg-secondary text-primary-foreground text-4xl font-bold ring-4 ring-primary/20 shadow-soft mx-auto"
              >
                <%= user.fullname ? user.fullname.charAt(0).toUpperCase() : "C" %>
              </div>
              <% } %>
              <h3 class="text-xl font-serif font-bold text-foreground mt-4">
                <%= user.fullname %>
              </h3>
              <p class="text-sm text-gray-500">Client</p>
              
              <div class="mt-4 pt-4 border-t border-border space-y-2 text-sm text-left text-gray-500">
                <p><span class="font-semibold text-foreground">Property Type:</span> <%= user.branch || 'Not specified' %></p>
                <p><span class="font-semibold text-foreground">Services of Interest:</span> <%= user.interests && user.interests.length ? user.interests.join(', ') : 'Not specified' %></p>
              </div>

               <div class="mt-6">
                <a href="/student/profile" class="w-full text-center block px-4 py-2 rounded-md bg-primary/10 text-primary hover:bg-primary hover:text-primary-foreground transition-colors font-semibold">
                  Update Profile
                </a>
              </div>

            </div>
          </aside>

          <section class="lg:col-span-2 space-y-8">
            
             <% if (user.interests && user.interests.length > 0) { %>
            <div>
              <h3 class="text-2xl font-serif font-bold text-foreground mb-4">Connect with an Energy Advisor</h3>
              <div class="space-y-4">
                <div class="alumni-card bg-card p-4 rounded-xl shadow-soft flex items-center gap-4 card-hover animate-fade-in-up" style="animation-delay: 100ms">
                  <img src="https://images.pexels.com/photos/8353802/pexels-photo-8353802.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2" alt="Advisor Photo" class="h-16 w-16 rounded-full object-cover"/>
                  <div class="flex-grow">
                    <h4 class="font-serif text-lg font-bold alumni-name">Priya Sharma</h4>
                    <p class="text-sm text-gray-500">Residential Solar Specialist</p>
                  </div>
                  <button data-alumni-id="static1" class="connect-btn flex-shrink-0 px-4 py-2 bg-primary/10 text-primary hover:bg-primary hover:text-white rounded-lg font-bold text-sm transition-all duration-300">Connect</button>
                </div>
                <div class="alumni-card bg-card p-4 rounded-xl shadow-soft flex items-center gap-4 card-hover animate-fade-in-up" style="animation-delay: 200ms">
                  <img src="https://images.pexels.com/photos/8429803/pexels-photo-8429803.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2" alt="Advisor Photo" class="h-16 w-16 rounded-full object-cover"/>
                  <div class="flex-grow">
                    <h4 class="font-serif text-lg font-bold alumni-name">Rohan Mehta</h4>
                    <p class="text-sm text-gray-500">Commercial Solutions Architect</p>
                  </div>
                  <button data-alumni-id="static2" class="connect-btn flex-shrink-0 px-4 py-2 bg-primary/10 text-primary hover:bg-primary hover:text-white rounded-lg font-bold text-sm transition-all duration-300">Connect</button>
                </div>
              </div>
            </div>
            <% } %>
            
            <div>
              <div class="flex justify-between items-center mb-4">
                 <h3 class="text-2xl font-serif font-bold text-foreground">Our Team</h3>
                 <a href="/student/map" class="px-4 py-2 bg-primary/10 text-primary hover:bg-primary hover:text-white rounded-lg font-bold text-sm transition-colors">View All</a>
              </div>
              <div class="space-y-4">
                 <% const otherAlumni = AlumniList.slice(0, 4); %>
                 <% otherAlumni.forEach((alumni, index) => { %>
                  <div class="alumni-card bg-card p-4 rounded-xl shadow-soft flex items-center gap-4 card-hover animate-fade-in-up" style="animation-delay: <%= (index + 3) * 100 %>ms">
                    <img src="<%= alumni.image ? 'data:image/jpeg;base64,' + alumni.image.toString('base64') : 'https://placehold.co/64x64/22c55e/ffffff?text=' + (alumni.name ? alumni.name.charAt(0) : 'A') %>" alt="Team Member Photo" class="h-16 w-16 rounded-full object-cover"/>
                    <div class="flex-grow">
                      <h4 class="font-serif text-lg font-bold alumni-name"><%= alumni.name %></h4>
                      <p class="text-sm text-gray-500"><%= alumni.designation %>, <%= alumni.currentCompany %></p>
                    </div>
                    <button data-alumni-id="<%= alumni._id %>" class="connect-btn flex-shrink-0 px-4 py-2 bg-primary/10 text-primary hover:bg-primary hover:text-white rounded-lg font-bold text-sm transition-all duration-300">Connect</button>
                  </div>
                <% }); %>
              </div>
            </div>
          </section>

          <aside class="lg:col-span-1 lg:sticky lg:top-32 self-start space-y-6">
            <div
              class="bg-card rounded-xl shadow-soft p-6 animate-fade-in-up"
              style="animation-delay: 500ms"
            >
              <h3 class="text-xl font-serif text-foreground mb-4">
                Recommended Products
              </h3>
              <div class="space-y-4">
                <a href="#" class="block group">
                  <h4 class="font-serif font-semibold group-hover:underline">
                    Residential Solar Package (5kW)
                  </h4>
                  <p class="text-xs text-gray-500 mt-1">
                    Based on your profile
                  </p>
                </a>
                <a
                  href="#"
                  class="block group pt-4 border-t border-border"
                >
                  <h4 class="font-serif font-semibold group-hover:underline">
                    Commercial EV Charging Station
                  </h4>
                  <p class="text-xs text-gray-500 mt-1">
                    For businesses and communities
                  </p>
                </a>
              </div>
            </div>
          </aside>
        </div>
      </div>
    </main>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        lucide.createIcons();
        // Connect Button Logic (remains the same)
        const connectButtons = document.querySelectorAll(".connect-btn");
        connectButtons.forEach(button => {
            button.addEventListener("click", function() {
                const alumniId = this.dataset.alumniId;
                if(alumniId.startsWith('static')) {
                   this.textContent = "Request Sent";
                   this.disabled = true;
                   this.classList.remove('bg-primary/10', 'text-primary');
                   this.classList.add('bg-gray-200', 'text-gray-500', 'cursor-not-allowed');
                  return; 
                }
                this.disabled = true; this.textContent = "Sending...";
                fetch(`/student/connect/${alumniId}`, { method: 'POST', headers: { 'Content-Type': 'application/json' } })
                .then(response => response.json())
                .then(data => {
                    if (data.message) {
                        this.textContent = "Request Sent";
                        this.classList.remove('bg-primary/10', 'text-primary');
                        this.classList.add('bg-gray-200', 'text-gray-500', 'cursor-not-allowed');
                    } else {
                        this.textContent = "Failed"; this.disabled = false;
                    }
                }).catch(error => {
                    console.error('Error:', error);
                    this.textContent = "Error"; this.disabled = false;
                });
            });
        });

        // Particle and animation logic
        const animatedElements = document.querySelectorAll(".animate-fade-in-up");
        const animationObserver = new IntersectionObserver((entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    const delay = entry.target.style.animationDelay || "0s";
                    entry.target.style.transition = `opacity 0.6s ease-out ${delay}, transform 0.6s ease-out ${delay}`;
                    entry.target.style.opacity = "1";
                    entry.target.style.transform = "translateY(0)";
                    animationObserver.unobserve(entry.target);
                }
            });
        }, { threshold: 0.1 });
        animatedElements.forEach((el) => {
            el.style.opacity = "0";
            el.style.transform = "translateY(20px)";
            animationObserver.observe(el);
        });
        const canvas = document.getElementById("particle-canvas");
        const ctx = canvas.getContext("2d");
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        let particles = [];
        const particleColor = "rgba(22, 163, 74, 0.4)"; // UPDATED to green
        class Particle { constructor(x, y) { this.x = x; this.y = y; this.size = Math.random() * 1.5 + 1; this.speedX = Math.random() * 0.3 - 0.15; this.speedY = Math.random() * 0.3 - 0.15; } update() { this.x += this.speedX; this.y += this.speedY; if (this.size > 0.1) this.size -= 0.005; } draw() { ctx.fillStyle = particleColor; ctx.beginPath(); ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2); ctx.fill(); } }
        function initParticles() { for (let i = 0; i < 50; i++) { particles.push(new Particle(Math.random() * canvas.width, Math.random() * canvas.height)); } }
        function animateParticles() { if (!canvas) return; ctx.clearRect(0, 0, canvas.width, canvas.height); for (let i = 0; i < particles.length; i++) { particles[i].update(); particles[i].draw(); if (particles[i].size <= 0.1) { particles.splice(i, 1); i--; particles.push(new Particle(Math.random() * canvas.width, Math.random() * canvas.height)); } } requestAnimationFrame(animateParticles); }
        initParticles(); animateParticles();
        window.addEventListener("resize", () => { if (canvas) { canvas.width = window.innerWidth; canvas.height = window.innerHeight; particles = []; initParticles(); } });
      });
    </script>
  </body>
</html>